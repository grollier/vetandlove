<<<<<<< HEAD
# Generated by Django 2.0.5 on 2018-05-07 05:42
=======
# Generated by Django 2.0.5 on 2018-05-17 05:55
>>>>>>> serializers_feature

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'El DPI ingresado ya existe, intente de nuevo'}, help_text='Requiere el ingreso del DPI para uso de usuario', max_length=13, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='DPI')),
                ('nombreCliente', models.CharField(max_length=150, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=150, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Correo Electronico')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si el usuario es o no un miembro activo del sistema', verbose_name='Miembro Activo')),
                ('fechaNacimiento', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Nacimiento')),
                ('fechaCreacion', models.DateTimeField(verbose_name='Publicado_en')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Correo',
            fields=[
                ('correoId', models.AutoField(primary_key=True, serialize=False)),
                ('correo', models.CharField(max_length=100, validators=[django.core.validators.EmailValidator(message='Correo Invalido')])),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cliente.Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('direccionId', models.AutoField(primary_key=True, serialize=False)),
                ('direccion', models.CharField(max_length=240)),
                ('colonia', models.CharField(max_length=100)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cliente.Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('municipioId', models.AutoField(primary_key=True, serialize=False)),
                ('municipio', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Telefono',
            fields=[
                ('telefonoId', models.AutoField(primary_key=True, serialize=False)),
                ('telefono', models.CharField(max_length=8, unique=True)),
                ('tipodeTelefono', models.CharField(choices=[('celular', 'CELULAR'), ('trabajo', 'TRABAJO'), ('casa', 'CASA'), ('otro', 'OTRO')], default='CELULAR', max_length=7)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cliente.Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('zonaId', models.AutoField(primary_key=True, serialize=False)),
                ('zona', models.CharField(max_length=2)),
            ],
        ),
        migrations.AddField(
            model_name='direccion',
            name='municipio',
            field=models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='cliente.Municipio'),
        ),
        migrations.AddField(
            model_name='direccion',
            name='zona',
            field=models.OneToOneField(default=False, on_delete=django.db.models.deletion.CASCADE, to='cliente.Zona'),
        ),
    ]
